{
    "diagnostic.checkCurrentLine": true,
    "diagnostic.maxWindowHeight": 1,
    "suggest.echodocSupport": true,
    "suggest.maxCompleteItemCount": 20,
    "suggest.floatEnable": true,
    "suggest.enablePreview": true,
    "coc.preferences.hoverTarget": "float",
    "codeLens.enable": true,
    "css.validate": false,
    "less.validate": false,
    "scss.validate": false,
    "wxss.validate": false,
    "stylelintplus.autoFixOnSave": true,
    "stylelintplus.configFile": "./.stylelintrc",
    "intelephense.files.exclude": [
        "**/.git/**"
    ],
    "intelephense.diagnostics": {
        "unusedSymbols": false
    },
    "languageserver": {
        "psalmls": {
            "command": "~/.config/composer/vendor/bin/psalm-language-server",
            "filetypes": ["php"],
            "rootPatterns": ["psalm.xml", "psalm.xml.dist"],
            "requireRootPattern": true
        },
        "elmLS": {
            "command": "elm-language-server",
            "filetypes": ["elm"],
            "rootPatterns": ["elm.json"]
        },
        "elixirLS": {
            "command": "~/source/tools/elixir-ls/release/language_server.sh",
            "filetypes": ["elixir", "eelixir"]
        },
        "purescript": {
            "command": "~/.npm/lib/node_modules/purescript-language-server/cli.js",
            "args": ["--stdio"],
            "filetypes": ["purescript"],
            "rootPatterns": ["packages.dhall", "spago.dhall"]
        },
        "dls": {
            "command": "diagnostic-languageserver",
            "args": ["--stdio"],
            "filetypes": ["php", "elixir", "eelixir"],
            "initializationOptions": {
                "linters": {
                    "psalm": {
                        "command": "~/.config/composer/vendor/bin/psalm",
                        "debounce": 100,
                        "rootPatterns": ["composer.json", "composer.lock", "vendor", ".git"],
                        "args": ["--output-format=emacs", "--no-progress"],
                        "offsetLine": 0,
                        "offsetColumn": 0,
                        "sourceName": "psalm",
                        "formatLines": 1,
                        "formatPattern": [
                            "^[^:]+:(\\d):(\\d):(.*)\\s-\\s(.*)(\\r|\\n)*$",
                            {
                            "line": 1,
                            "column": 2,
                            "message": 4,
                            "security": 3
                            }
                        ],
                        "securities": {
                            "error": "error",
                            "warning": "warning"
                        },
                        "requiredFiles": ["psalm.xml"]
                    },
                    "phpstan": {
                        "command": "phpstan",
                        "debounce": 100,
                        "rootPatterns": [ "composer.json", "composer.lock", "vendor", ".git" ],
                        "args": [ "analyze", "--error-format", "raw", "--no-progress", "%file" ],
                        "offsetLine": 0,
                        "offsetColumn": 0,
                        "sourceName": "phpstan",
                        "formatLines": 1,
                        "formatPattern": [
                            "^[^:]+:(\\d+):(.*)(\\r|\\n)*$",
                            {
                            "line": 1,
                            "message": 2
                            }
                        ]
                    },
                    "phpcs": {
                        "command": "./bin/phpcs",
                        "debounce": 100,
                        "rootPatterns": [ "composer.json", "composer.lock", "vendor", ".git" ],
                        "args": [ "--standard=phpcs.xml", "--report=emacs", "-s", "-" ],
                        "offsetLine": 0,
                        "offsetColumn": 0,
                        "sourceName": "phpcs",
                        "formatLines": 1,
                        "formatPattern": [
                            "^.*:(\\d+):(\\d+):\\s+(.*)\\s+-\\s+(.*)$",
                            {
                                "line": 1,
                                "column": 2,
                                "message": 4,
                                "security": 3
                            }
                        ],
                        "securities": {
                            "error": "error",
                            "warning": "warning"
                        }
                    },
                    "mix_credo": {
                        "command": "mix",
                        "debounce": 100,
                        "rootPatterns": ["mix.exs"],
                        "args": ["credo", "suggest", "--format", "flycheck", "--read-from-stdin"],
                        "offsetLine": 0,
                        "offsetColumn": 0,
                        "sourceName": "mix_credo",
                        "formatLines": 1,
                        "formatPattern": [
                            "^[^ ]+?:([0-9]+)(:([0-9]+))?:\\s+([^ ]+):\\s+(.*)$",
                        {
                            "line": 1,
                            "column": 3,
                            "message": 5,
                            "security": 4
                        }
                        ],
                        "securities": {
                            "F": "warning",
                            "C": "warning",
                            "D": "info",
                            "R": "info"
                        }
                    }
                },
                "formatters": {
                    "mix_format": {
                        "command": "mix",
                        "args": ["format", "-"]
                    }
                },
                "formatFiletypes": {
                    "elixir": "mix_format",
                    "eelixir": "mix_format"
                },
                "filetypes": {
                    "php": ["phpcs", "phpstan", "psalm"],
                    "elixir": "mix_credo",
                    "eelixir": "mix_credo"
                }
            }
        }
    }
}
